# Librspamdclient
SET(LIBRSPAMDCLIENTSRC			rspamdclient.c)

IF(NO_SHARED MATCHES "OFF")
	ADD_LIBRARY(rspamdclient SHARED ${LIBRSPAMDCLIENTSRC})
ELSE(NO_SHARED MATCHES "OFF")
	ADD_LIBRARY(rspamdclient STATIC ${LIBRSPAMDCLIENTSRC})
ENDIF(NO_SHARED MATCHES "OFF")
ADD_LIBRARY(rspamdclient_static STATIC ${LIBRSPAMDCLIENTSRC})
SET_TARGET_PROPERTIES(rspamdclient PROPERTIES COMPILE_FLAGS "-fPIC")
SET_TARGET_PROPERTIES(rspamdclient_static PROPERTIES COMPILE_FLAGS "-fPIC")

TARGET_LINK_LIBRARIES(rspamdclient rspamd-util)
TARGET_LINK_LIBRARIES(rspamdclient ${RSPAMD_REQUIRED_LIBRARIES})

IF(GLIB_COMPAT)
	INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/contrib/lgpl")
	TARGET_LINK_LIBRARIES(rspamdclient glibadditions)
ENDIF(GLIB_COMPAT)

IF(NO_SHARED MATCHES "OFF")
	INSTALL(TARGETS rspamdclient LIBRARY PUBLIC_HEADER 
   	 	LIBRARY DESTINATION ${LIBDIR} 
    	PUBLIC_HEADER DESTINATION ${INCLUDEDIR}
   		ARCHIVE DESTINATION ${LIBDIR})
ENDIF(NO_SHARED MATCHES "OFF")

# rspamc
SET(RSPAMCSRC			  rspamc.c)

ADD_EXECUTABLE(rspamc ${RSPAMCSRC})
SET_TARGET_PROPERTIES(rspamc PROPERTIES COMPILE_FLAGS "-I${CMAKE_SOURCE_DIR}/lib")
TARGET_LINK_LIBRARIES(rspamc rspamd-util)
IF(ENABLE_STATIC MATCHES "ON")
    TARGET_LINK_LIBRARIES(rspamc rspamdclient_static)
ELSE(ENABLE_STATIC MATCHES "ON")
    TARGET_LINK_LIBRARIES(rspamc rspamdclient)
ENDIF(ENABLE_STATIC MATCHES "ON")
IF(GLIB_COMPAT)
	TARGET_LINK_LIBRARIES(rspamc glibadditions)
ENDIF(GLIB_COMPAT)
IF(OPENSSL_FOUND)
	TARGET_LINK_LIBRARIES(rspamc ${OPENSSL_LIBRARIES})
ENDIF(OPENSSL_FOUND)
TARGET_LINK_LIBRARIES(rspamc ${RSPAMD_REQUIRED_LIBRARIES})
IF(ENABLE_GPERF_TOOLS MATCHES "ON")
	TARGET_LINK_LIBRARIES(rspamc profiler)
ENDIF(ENABLE_GPERF_TOOLS MATCHES "ON")
IF(NOT DEBIAN_BUILD)
SET_TARGET_PROPERTIES(rspamc PROPERTIES VERSION ${RSPAMD_VERSION})
ENDIF(NOT DEBIAN_BUILD)

INSTALL(TARGETS rspamc RUNTIME DESTINATION bin)
