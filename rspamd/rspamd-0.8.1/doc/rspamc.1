.TH "RSPAMC" "1" "" "Rspamd User Manual" ""
.SH NAME
.PP
rspamc \- rspamd command line client
.SH SYNOPSIS
.PP
rspamc [\f[I]options\f[]] [\f[I]command\f[]] [\f[I]input\-file\f[]]...
.PP
rspamc \-\-help
.SH DESCRIPTION
.PP
Rspamc is a simple client for checking messages using rspamd or for
learning rspamd by messages.
Rspamc supports the following commands:
.IP \[bu] 2
Scan commands:
.RS 2
.IP \[bu] 2
\f[I]symbols\f[]: scan message and show symbols (default command)
.RE
.IP \[bu] 2
Control commands
.RS 2
.IP \[bu] 2
\f[I]learn_spam\f[]: learn message as spam
.IP \[bu] 2
\f[I]learn_ham\f[]: learn message as ham
.IP \[bu] 2
\f[I]fuzzy_add\f[]: add message to fuzzy storage (check \f[C]\-f\f[] and
\f[C]\-w\f[] options for this command)
.IP \[bu] 2
\f[I]fuzzy_del\f[]: delete message from fuzzy storage (check
\f[C]\-f\f[] option for this command)
.IP \[bu] 2
\f[I]stat\f[]: show rspamd statistics
.IP \[bu] 2
\f[I]stat_reset\f[]: show and reset rspamd statistics (useful for
graphs)
.IP \[bu] 2
\f[I]counters\f[]: display rspamd symbols statistics
.IP \[bu] 2
\f[I]uptime\f[]: show rspamd uptime
.IP \[bu] 2
\f[I]add_symbol\f[]: add or modify symbol settings in rspamd
.IP \[bu] 2
\f[I]add_action\f[]: add or modify action settings
.RE
.PP
Control commands that modifies rspamd state are considered as privileged
and basically requires a password to be specified with \f[C]\-P\f[]
option (see \f[B]OPTIONS\f[], below, for details).
This depends on a controller\[aq]s settings and is discussed in
\f[C]rspamd\-workers\f[] page.
.PP
\f[C]Input\ files\f[] may be either regular file(s) or a directory to
scan.
If no files are specified rspamc reads from the standard input.
Controller commands usually does not accept any input, however learn*
and fuzzy* commands requires input.
.SH OPTIONS
.TP
.B \-h \f[I]host[:port]\f[], \-\-connect=\f[I]host[:port]\f[]
Specify host and port
.RS
.RE
.TP
.B \-P \f[I]password\f[], \-\-password=\f[I]password\f[]
Specify control password
.RS
.RE
.TP
.B \-c \f[I]name\f[], \-\-classifier=\f[I]name\f[]
Classifier to learn spam or ham (bayes is used by default)
.RS
.RE
.TP
.B \-w \f[I]weight\f[], \-\-weight=\f[I]weight\f[]
Weight for fuzzy operations
.RS
.RE
.TP
.B \-f \f[I]number\f[], \-\-flag=\f[I]number\f[]
Flag for fuzzy operations
.RS
.RE
.TP
.B \-p, \-\-pass
Pass all filters
.RS
.RE
.TP
.B \-v, \-\-verbose
More verbose output
.RS
.RE
.TP
.B \-i \f[I]ip address\f[], \-\-ip=\f[I]ip address\f[]
Emulate that message was received from specified ip address
.RS
.RE
.TP
.B \-u \f[I]username\f[], \-\-user=\f[I]username\f[]
Emulate that message was from specified user
.RS
.RE
.TP
.B \-d \f[I]user\@domain\f[], \-\-deliver=\f[I]user\@domain\f[]
Emulate that message is delivered to specified user
.RS
.RE
.TP
.B \-F \f[I]user\@domain\f[], \-\-from=\f[I]user\@domain\f[]
Emulate that message is from specified user
.RS
.RE
.TP
.B \-r \f[I]user\@domain\f[], \-\-rcpt=\f[I]user\@domain\f[]
Emulate that message is for specified user
.RS
.RE
.TP
.B \-\-helo=\f[I]helo_string\f[]
Imitate SMTP HELO passing from MTA
.RS
.RE
.TP
.B \-\-hostname=\f[I]hostname\f[]
Imitate hostname passing from MTA (rspamd assumes that it is verified by
MTA)
.RS
.RE
.TP
.B \-t \f[I]seconds\f[], \-\-timeout=\f[I]seconds\f[]
Timeout for waiting for a reply (can be floating point number, e.g.
0.1)
.RS
.RE
.TP
.B \-b \f[I]host:port\f[], \-\-bind=\f[I]host:port\f[]
Bind to specified ip address
.RS
.RE
.TP
.B \-j, \-\-json
Output formatted JSON
.RS
.RE
.TP
.B \-\-ucl
Output UCL
.RS
.RE
.TP
.B \-\-raw
Output raw data received from rspamd (compacted JSON)
.RS
.RE
.TP
.B \-\-headers
Output HTTP headers from a reply
.RS
.RE
.TP
.B \-\-extended\-urls
Output URLs in an extended format, showing full URL, host and the part
of host that was used by surbl module (if enabled).
.RS
.RE
.TP
.B \-n \f[I]parallel_count\f[],
\-\-max\-requests=\f[I]parallel_count\f[]
Maximum number of requests to rspamd executed in parallel (8 by default)
.RS
.RE
.TP
.B \-\-commands
List available commands
.RS
.RE
.SH RETURN VALUE
.PP
On exit rspamc returns \f[C]0\f[] if operation was successfull and an
error code otherwise.
.SH EXAMPLES
.PP
Check stdin:
.IP
.nf
\f[C]
rspamc\ <\ some_file
\f[]
.fi
.PP
Check files:
.IP
.nf
\f[C]
rspamc\ symbols\ file1\ file2\ file3
\f[]
.fi
.PP
Learn files:
.IP
.nf
\f[C]
rspamc\ \-P\ pass\ learn_spam\ file1\ file2\ file3
\f[]
.fi
.PP
Add fuzzy hash to set 2:
.IP
.nf
\f[C]
rspamc\ \-P\ pass\ \-f\ 2\ \-w\ 10\ fuzzy_add\ file1\ file2
\f[]
.fi
.PP
Delete fuzzy hash from other server:
.IP
.nf
\f[C]
rspamc\ \-P\ pass\ \-h\ hostname:11334\ \-f\ 2\ fuzzy_del\ file1\ file2
\f[]
.fi
.PP
Get statistics:
.IP
.nf
\f[C]
rspamc\ stat
\f[]
.fi
.PP
Get uptime:
.IP
.nf
\f[C]
rspamc\ uptime
\f[]
.fi
.PP
Add custom rule\[aq]s weight:
.IP
.nf
\f[C]
rspamc\ add_symbol\ test\ 1.5
\f[]
.fi
.PP
Add custom action\[aq]s weight:
.IP
.nf
\f[C]
rspamc\ add_action\ reject\ 7.1
\f[]
.fi
.SH SEE ALSO
.PP
Rspamd documentation and source codes may be downloaded from
<https://rspamd.com/>.
